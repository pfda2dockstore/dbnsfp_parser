# Generated by precisionFDA exporter (v1.0.3) on 2018-06-14 15:45:27 +0000
# The asset download links in this file are valid only for 24h.

# Exported app: dbnsfp_parser, revision: 26, authored by: vladimir.gainullin
# https://precision.fda.gov/apps/app-F06Z60j0QxP1P1zyVZ3vbgXp

# For more information please consult the app export section in the precisionFDA docs

# Start with Ubuntu 14.04 base image
FROM ubuntu:14.04

# Install default precisionFDA Ubuntu packages
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \
	aria2 \
	byobu \
	cmake \
	cpanminus \
	curl \
	dstat \
	g++ \
	git \
	htop \
	libboost-all-dev \
	libcurl4-openssl-dev \
	libncurses5-dev \
	make \
	perl \
	pypy \
	python-dev \
	python-pip \
	r-base \
	ruby1.9.3 \
	wget \
	xz-utils

# Install default precisionFDA python packages
RUN pip install \
	requests==2.5.0 \
	futures==2.2.0 \
	setuptools==10.2

# Add DNAnexus repo to apt-get
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/amd64/' > /etc/apt/sources.list.d/dnanexus.list"
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/all/' >> /etc/apt/sources.list.d/dnanexus.list"
RUN curl https://wiki.dnanexus.com/images/files/ubuntu-signing-key.gpg | apt-key add -

# Install app-specific Ubuntu packages
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \
	python-pandas

# Download helper executables
RUN curl https://dl.dnanex.us/F/D/0K8P4zZvjq9vQ6qV0b6QqY1z2zvfZ0QKQP4gjBXp/emit-1.0.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions
RUN curl https://dl.dnanex.us/F/D/bByKQvv1F7BFP3xXPgYXZPZjkXj9V684VPz8gb7p/run-1.2.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions

# Write app spec and code to root folder
RUN ["/bin/bash","-c","echo -E \\{\\\"spec\\\":\\{\\\"input_spec\\\":\\[\\{\\\"name\\\":\\\"dbnsfp\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"\\\",\\\"help\\\":\\\"\\\",\\\"default\\\":\\\"file-F04vvg000kYQBpPB4835fVv6\\\"\\},\\{\\\"name\\\":\\\"dbnsfp_parser\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"\\\",\\\"help\\\":\\\"\\\",\\\"default\\\":\\\"file-F06Z5Kj0q9YfY9jfbG3VZG4g\\\"\\},\\{\\\"name\\\":\\\"ENSG\\\",\\\"class\\\":\\\"string\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Gene\\ ID\\\",\\\"help\\\":\\\"\\\",\\\"default\\\":\\\"ENSG00000118762\\\"\\},\\{\\\"name\\\":\\\"Chr\\\",\\\"class\\\":\\\"string\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Chromosome\\ number\\\",\\\"help\\\":\\\"\\\",\\\"default\\\":\\\"4\\\"\\}\\],\\\"output_spec\\\":\\[\\{\\\"name\\\":\\\"dbNSFP_OUT\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"\\\",\\\"help\\\":\\\"\\\"\\}\\],\\\"internet_access\\\":true,\\\"instance_type\\\":\\\"himem-32\\\"\\},\\\"assets\\\":\\[\\],\\\"packages\\\":\\[\\\"python-pandas\\\"\\]\\} \u003e /spec.json"]
RUN ["/bin/bash","-c","echo -E \\{\\\"code\\\":\\\"python\\ \\\\\\\"\\$dbnsfp_parser_path\\\\\\\"\\ \\\\\\\"\\$Chr\\\\\\\"\\ \\\\\\\"\\$ENSG\\\\\\\"\\\\nemit\\ dbNSFP_OUT\\ \\\\\\\"dbNSFP_extract.csv\\\\\\\"\\\\n\\\\n\\\"\\} | python -c 'import sys,json; print json.load(sys.stdin)[\"code\"]' \u003e /script.sh"]

# Create directory /work and set it to $HOME and CWD
RUN mkdir -p /work
ENV HOME="/work"
WORKDIR /work

# Set entry point to container
ENTRYPOINT ["/usr/bin/run"]

VOLUME /data
VOLUME /work